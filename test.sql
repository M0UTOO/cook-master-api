CREATE TABLE USERS(
   Id_USERS INT AUTO_INCREMENT,
   email VARCHAR(100)  NOT NULL,
   password CHAR(255)  NOT NULL,
   firstName VARCHAR(50)  NOT NULL,
   lastName VARCHAR(50)  NOT NULL,
   profilePicture VARCHAR(100) ,
   PRIMARY KEY(Id_USERS),
   UNIQUE(email)
);

CREATE TABLE MANAGER(
   Id_MANAGER INT AUTO_INCREMENT,
   isItemManager BOOLEAN,
   isClientManager BOOLEAN,
   isContractorManager BOOLEAN,
   Id_USERS INT NOT NULL,
   PRIMARY KEY(Id_MANAGER),
   UNIQUE(Id_USERS),
   FOREIGN KEY(Id_USERS) REFERENCES USERS(Id_USERS)
);

CREATE TABLE CONTRACTORS(
   Id_CONTRACTORS INT AUTO_INCREMENT,
   presentation TEXT,
   Id_USERS INT NOT NULL,
   PRIMARY KEY(Id_CONTRACTORS),
   UNIQUE(Id_USERS),
   FOREIGN KEY(Id_USERS) REFERENCES USERS(Id_USERS)
);

CREATE TABLE PREMISES(
   Id_PREMISES INT AUTO_INCREMENT,
   streetNumber SMALLINT,
   streetName VARCHAR(100) ,
   city VARCHAR(100) ,
   country VARCHAR(50) ,
   PRIMARY KEY(Id_PREMISES)
);

CREATE TABLE SUBSCRIPTION(
   Id_SUBSCRIPTION INT AUTO_INCREMENT,
   name VARCHAR(50) ,
   price DECIMAL(19,4),
   max_lesson_access TINYINT,
   picture VARCHAR(50) ,
   PRIMARY KEY(Id_SUBSCRIPTION)
);

CREATE TABLE EVENTS(
   Id_EVENTS INT AUTO_INCREMENT,
   type VARCHAR(50) ,
   endTime DATETIME,
   startTime DATETIME,
   isInternal BOOLEAN,
   isPrivate BOOLEAN,
   PRIMARY KEY(Id_EVENTS)
);

CREATE TABLE CONVERSATIONS(
   Id_CONVERSATIONS INT AUTO_INCREMENT,
   PRIMARY KEY(Id_CONVERSATIONS)
);

CREATE TABLE MESSAGES(
   Id_MESSAGES INT AUTO_INCREMENT,
   content TEXT,
   isFromUser1 BOOLEAN,
   Id_CONVERSATIONS INT NOT NULL,
   PRIMARY KEY(Id_MESSAGES),
   FOREIGN KEY(Id_CONVERSATIONS) REFERENCES CONVERSATIONS(Id_CONVERSATIONS)
);

CREATE TABLE REWARDS(
   Id_REWARDS INT AUTO_INCREMENT,
   name VARCHAR(100) ,
   fidelityPointsCost INT,
   PRIMARY KEY(Id_REWARDS)
);

CREATE TABLE LESSONS(
   Id_LESSONS INT AUTO_INCREMENT,
   content TEXT,
   name VARCHAR(50) ,
   description VARCHAR(50) ,
   level TINYINT,
   PRIMARY KEY(Id_LESSONS)
);

CREATE TABLE SHOP_ITEM(
   Id_SHOP_ITEM INT AUTO_INCREMENT,
   name VARCHAR(100) ,
   description TEXT,
   price DECIMAL(19,4),
   stock BIGINT,
   PRIMARY KEY(Id_SHOP_ITEM)
);

CREATE TABLE FOOD(
   Id_FOOD INT AUTO_INCREMENT,
   name VARCHAR(100) ,
   description TEXT,
   price DECIMAL(19,4),
   PRIMARY KEY(Id_FOOD)
);

CREATE TABLE CLIENTS(
   Id_CLIENTS INT AUTO_INCREMENT,
   fidelityPoints INT,
   streetName VARCHAR(100) ,
   country VARCHAR(50) ,
   city VARCHAR(100) ,
   streetNumber SMALLINT,
   phoneNumber VARCHAR(25) ,
   Id_SUBSCRIPTION INT,
   Id_USERS INT NOT NULL,
   PRIMARY KEY(Id_CLIENTS),
   UNIQUE(Id_USERS),
   FOREIGN KEY(Id_SUBSCRIPTION) REFERENCES SUBSCRIPTION(Id_SUBSCRIPTION),
   FOREIGN KEY(Id_USERS) REFERENCES USERS(Id_USERS)
);

CREATE TABLE COOKING_SPACES(
   Id_COOKING_SPACES INT AUTO_INCREMENT,
   size DECIMAL(5,2)  ,
   name VARCHAR(50) ,
   isAvailable BOOLEAN,
   PricePerHour DECIMAL(19,4),
   Id_CLIENTS INT,
   Id_PREMISES INT NOT NULL,
   PRIMARY KEY(Id_COOKING_SPACES),
   FOREIGN KEY(Id_CLIENTS) REFERENCES CLIENTS(Id_CLIENTS),
   FOREIGN KEY(Id_PREMISES) REFERENCES PREMISES(Id_PREMISES)
);

CREATE TABLE COOKING_ITEMS(
   Id_COOKING_ITEMS INT AUTO_INCREMENT,
   name VARCHAR(50) ,
   status VARCHAR(20) ,
   Id_COOKING_SPACES INT NOT NULL,
   PRIMARY KEY(Id_COOKING_ITEMS),
   FOREIGN KEY(Id_COOKING_SPACES) REFERENCES COOKING_SPACES(Id_COOKING_SPACES)
);

CREATE TABLE COMMENTS(
   Id_COMMENTS INT AUTO_INCREMENT,
   grade DECIMAL(2,1)   NOT NULL,
   content TEXT,
   photo_link VARCHAR(50) ,
   Id_CLIENTS INT NOT NULL,
   Id_EVENTS INT NOT NULL,
   PRIMARY KEY(Id_COMMENTS),
   FOREIGN KEY(Id_CLIENTS) REFERENCES CLIENTS(Id_CLIENTS),
   FOREIGN KEY(Id_EVENTS) REFERENCES EVENTS(Id_EVENTS)
);

CREATE TABLE ORDERS(
   Id_ORDERS INT AUTO_INCREMENT,
   status VARCHAR(20) ,
   bill VARCHAR(100) ,
   deliveryAddress VARCHAR(50) ,
   Id_CONTRACTORS INT NOT NULL,
   Id_CONTRACTORS_1 INT NOT NULL,
   Id_CLIENTS INT NOT NULL,
   PRIMARY KEY(Id_ORDERS),
   FOREIGN KEY(Id_CONTRACTORS) REFERENCES CONTRACTORS(Id_CONTRACTORS),
   FOREIGN KEY(Id_CONTRACTORS_1) REFERENCES CONTRACTORS(Id_CONTRACTORS),
   FOREIGN KEY(Id_CLIENTS) REFERENCES CLIENTS(Id_CLIENTS)
);

CREATE TABLE INGREDIENT(
   Id_INGREDIENT INT AUTO_INCREMENT,
   isAllergen BOOLEAN,
   Id_COOKING_SPACES INT NOT NULL,
   PRIMARY KEY(Id_INGREDIENT),
   FOREIGN KEY(Id_COOKING_SPACES) REFERENCES COOKING_SPACES(Id_COOKING_SPACES)
);

CREATE TABLE PARTICIPATES(
   Id_CLIENTS INT,
   Id_EVENTS INT,
   PRIMARY KEY(Id_CLIENTS, Id_EVENTS),
   FOREIGN KEY(Id_CLIENTS) REFERENCES CLIENTS(Id_CLIENTS),
   FOREIGN KEY(Id_EVENTS) REFERENCES EVENTS(Id_EVENTS)
);

CREATE TABLE ANIMATES(
   Id_CONTRACTORS INT,
   Id_EVENTS INT,
   PRIMARY KEY(Id_CONTRACTORS, Id_EVENTS),
   FOREIGN KEY(Id_CONTRACTORS) REFERENCES CONTRACTORS(Id_CONTRACTORS),
   FOREIGN KEY(Id_EVENTS) REFERENCES EVENTS(Id_EVENTS)
);

CREATE TABLE ORGANIZES(
   Id_MANAGER INT,
   Id_EVENTS INT,
   PRIMARY KEY(Id_MANAGER, Id_EVENTS),
   FOREIGN KEY(Id_MANAGER) REFERENCES MANAGER(Id_MANAGER),
   FOREIGN KEY(Id_EVENTS) REFERENCES EVENTS(Id_EVENTS)
);

CREATE TABLE IS_HOSTED(
   Id_COOKING_SPACES INT,
   Id_EVENTS INT,
   PRIMARY KEY(Id_COOKING_SPACES, Id_EVENTS),
   FOREIGN KEY(Id_COOKING_SPACES) REFERENCES COOKING_SPACES(Id_COOKING_SPACES),
   FOREIGN KEY(Id_EVENTS) REFERENCES EVENTS(Id_EVENTS)
);

CREATE TABLE TALKS(
   Id_USERS INT,
   Id_CONVERSATIONS INT,
   PRIMARY KEY(Id_USERS, Id_CONVERSATIONS),
   FOREIGN KEY(Id_USERS) REFERENCES USERS(Id_USERS),
   FOREIGN KEY(Id_CONVERSATIONS) REFERENCES CONVERSATIONS(Id_CONVERSATIONS)
);

CREATE TABLE TEACHES(
   Id_CONTRACTORS INT,
   Id_LESSONS INT,
   PRIMARY KEY(Id_CONTRACTORS, Id_LESSONS),
   FOREIGN KEY(Id_CONTRACTORS) REFERENCES CONTRACTORS(Id_CONTRACTORS),
   FOREIGN KEY(Id_LESSONS) REFERENCES LESSONS(Id_LESSONS)
);

CREATE TABLE CONTAINS_ITEM(
   Id_ORDERS INT,
   Id_SHOP_ITEM INT,
   PRIMARY KEY(Id_ORDERS, Id_SHOP_ITEM),
   FOREIGN KEY(Id_ORDERS) REFERENCES ORDERS(Id_ORDERS),
   FOREIGN KEY(Id_SHOP_ITEM) REFERENCES SHOP_ITEM(Id_SHOP_ITEM)
);

CREATE TABLE CONTAINS_FOOD(
   Id_ORDERS INT,
   Id_FOOD INT,
   PRIMARY KEY(Id_ORDERS, Id_FOOD),
   FOREIGN KEY(Id_ORDERS) REFERENCES ORDERS(Id_ORDERS),
   FOREIGN KEY(Id_FOOD) REFERENCES FOOD(Id_FOOD)
);

CREATE TABLE WATCHES(
   Id_CLIENTS INT,
   Id_LESSONS INT,
   counter INT,
   PRIMARY KEY(Id_CLIENTS, Id_LESSONS),
   FOREIGN KEY(Id_CLIENTS) REFERENCES CLIENTS(Id_CLIENTS),
   FOREIGN KEY(Id_LESSONS) REFERENCES LESSONS(Id_LESSONS)
);
